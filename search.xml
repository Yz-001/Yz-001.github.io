<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>背包算法</title>
      <link href="/2022/06/26/algorithm-%E8%83%8C%E5%8C%85%E7%AE%97%E6%B3%95/"/>
      <url>/2022/06/26/algorithm-%E8%83%8C%E5%8C%85%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="背包算法"><a href="#背包算法" class="headerlink" title="背包算法"></a>背包算法</h3><h3 id="0-1背包问题或完全背包问题是组合优化中的问题：给定一组项目，每个项目都有一个权重和一个值，确定要包含在集合中的每个项目的数量，使得总权重小于或等于给定限制，并且总值尽可能大。"><a href="#0-1背包问题或完全背包问题是组合优化中的问题：给定一组项目，每个项目都有一个权重和一个值，确定要包含在集合中的每个项目的数量，使得总权重小于或等于给定限制，并且总值尽可能大。" class="headerlink" title="0/1背包问题或完全背包问题是组合优化中的问题：给定一组项目，每个项目都有一个权重和一个值，确定要包含在集合中的每个项目的数量，使得总权重小于或等于给定限制，并且总值尽可能大。"></a>0/1背包问题或完全背包问题是组合优化中的问题：给定一组项目，每个项目都有一个权重和一个值，确定要包含在集合中的每个项目的数量，使得总权重小于或等于给定限制，并且总值尽可能大。</h3><h3 id="0-1背包和完全背包的区别在于：0-1背包物品上限1次；完全背包可以使用无限次；"><a href="#0-1背包和完全背包的区别在于：0-1背包物品上限1次；完全背包可以使用无限次；" class="headerlink" title="0/1背包和完全背包的区别在于：0/1背包物品上限1次；完全背包可以使用无限次；"></a>0/1背包和完全背包的区别在于：0/1背包物品上限1次；完全背包可以使用无限次；</h3><h3 id="核心思想："><a href="#核心思想：" class="headerlink" title="核心思想："></a>核心思想：</h3><h3 id="1-当前物品-gt-背包容量-太重，放不下）"><a href="#1-当前物品-gt-背包容量-太重，放不下）" class="headerlink" title="1. 当前物品&gt;背包容量(太重，放不下）"></a>1. 当前物品&gt;背包容量(太重，放不下）</h3><h3 id="2-当前物品-lt-背包容量-选择是否存放"><a href="#2-当前物品-lt-背包容量-选择是否存放" class="headerlink" title="2. 当前物品&lt;背包容量,(选择是否存放);"></a>2. 当前物品&lt;背包容量,(选择是否存放);</h3><h3 id="不存放：包容量不变"><a href="#不存放：包容量不变" class="headerlink" title="- 不存放：包容量不变"></a>- 不存放：包容量不变</h3><h3 id="存放：-包剩余容量-当前物品容量-当前物品价值"><a href="#存放：-包剩余容量-当前物品容量-当前物品价值" class="headerlink" title="- 存放：[包剩余容量-当前物品容量]+当前物品价值"></a>- 存放：[包剩余容量-当前物品容量]+当前物品价值</h3><hr><h3 id="示例题-物品有-2kg-3-3kg-4-4kg-5-5kg-8-假设背包容量10kg-怎样存放才能在固定的容量里得到最大价值的物品"><a href="#示例题-物品有-2kg-3-3kg-4-4kg-5-5kg-8-假设背包容量10kg-怎样存放才能在固定的容量里得到最大价值的物品" class="headerlink" title="示例题:物品有[2kg($3),3kg($4),4kg($5),5kg($8)],假设背包容量10kg,怎样存放才能在固定的容量里得到最大价值的物品"></a>示例题:物品有[2kg($3),3kg($4),4kg($5),5kg($8)],假设背包容量10kg,怎样存放才能在固定的容量里得到最大价值的物品</h3><h4 id="物品编号：1-2-3-4"><a href="#物品编号：1-2-3-4" class="headerlink" title="物品编号：1  2  3  4"></a>物品编号：1  2  3  4</h4><h4 id="物品重量：2-3-4-5"><a href="#物品重量：2-3-4-5" class="headerlink" title="物品重量：2  3  4  5"></a>物品重量：2  3  4  5</h4><h4 id="物品价值：3-4-5-8"><a href="#物品价值：3-4-5-8" class="headerlink" title="物品价值：3  4  5  8"></a>物品价值：3  4  5  8</h4><h3 id="解："><a href="#解：" class="headerlink" title="解："></a>解：</h3><h3 id="一-0-1背包"><a href="#一-0-1背包" class="headerlink" title="一. 0/1背包"></a>一. 0/1背包</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> bagSize=<span class="number">10</span>      <span class="comment">//背包固定大小</span></span><br><span class="line"><span class="keyword">let</span> f=<span class="keyword">new</span> <span class="title class_">Array</span>(bagSize).<span class="title function_">fill</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">let</span> w=[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]     <span class="comment">//物品重量</span></span><br><span class="line"><span class="keyword">let</span> v=[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">8</span>]     <span class="comment">//物品价值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; w.<span class="property">length</span>; i++) &#123;     <span class="comment">//遍历物品</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> j = bagSize; j &gt;= w[i]; j--) &#123;  <span class="comment">//从后往前遍历背包容量</span></span><br><span class="line">    f[j]=<span class="title function_">max</span>(f[j],f[j-w[i]]+v[i])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果：-0-0-3-4-5-8-8-11-12-13-15"><a href="#结果：-0-0-3-4-5-8-8-11-12-13-15" class="headerlink" title="结果：[0, 0, 3, 4, 5, 8, 8, 11, 12, 13, 15]"></a>结果：[0, 0, 3, 4, 5, 8, 8, 11, 12, 13, 15]</h4><h3 id="二-完全背包"><a href="#二-完全背包" class="headerlink" title="二. 完全背包"></a>二. 完全背包</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> bagSize=<span class="number">10</span>      <span class="comment">//背包固定大小</span></span><br><span class="line"><span class="keyword">let</span> f=<span class="keyword">new</span> <span class="title class_">Array</span>(bagSize).<span class="title function_">fill</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">let</span> w=[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]     <span class="comment">//物品重量</span></span><br><span class="line"><span class="keyword">let</span> v=[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">8</span>]     <span class="comment">//物品价值</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; w.<span class="property">length</span>; i++) &#123;       <span class="comment">//遍历物品</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> j = w[i]; j &lt;= bagSize; j++) &#123;  <span class="comment">//遍历背包容量</span></span><br><span class="line">    f[j]=<span class="title function_">max</span>(f[j],f[j-w[i]]+v[i])</span><br><span class="line">  &#125;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果：-0-0-3-4-6-8-9-11-12-14-16"><a href="#结果：-0-0-3-4-6-8-9-11-12-14-16" class="headerlink" title="结果：[0, 0, 3, 4, 6, 8, 9, 11, 12, 14, 16]"></a>结果：[0, 0, 3, 4, 6, 8, 9, 11, 12, 14, 16]</h4>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Driver.js(新用户引导)</title>
      <link href="/2022/06/26/tool-Driver-js/"/>
      <url>/2022/06/26/tool-Driver-js/</url>
      
        <content type="html"><![CDATA[<h2 id="Driver-js-新用户引导"><a href="#Driver-js-新用户引导" class="headerlink" title="Driver.js(新用户引导)"></a>Driver.js(新用户引导)</h2><h3 id="官网链接：https-madewith-cn-766"><a href="#官网链接：https-madewith-cn-766" class="headerlink" title="官网链接：https://madewith.cn/766"></a>官网链接：<a href="https://madewith.cn/766">https://madewith.cn/766</a></h3><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add driver.js</span><br></pre></td></tr></table></figure><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://unpkg.com/driver.js/dist/driver.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://unpkg.com/driver.js/dist/driver.min.css&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Driver</span> <span class="keyword">from</span> <span class="string">&#x27;driver.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;driver.js/dist/driver.min.css&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><h4 id="index-vue"><a href="#index-vue" class="headerlink" title="index.vue"></a>index.vue</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;el-button icon=&quot;el-icon-question&quot; type=&quot;primary&quot; @click.prevent.stop=&quot;guide&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Driver from &#x27;driver.js&#x27; // import driver.js</span><br><span class="line">import &#x27;driver.js/dist/driver.min.css&#x27; // import driver.js css</span><br><span class="line">import steps from &#x27;./steps&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;Guide&#x27;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      driver: null</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.driver = new Driver(&#123; // 初始实例化</span><br><span class="line">      onNext: (Element) =&gt; &#123; // 点击下一步触发</span><br><span class="line">        this.driver.moveNext()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    guide() &#123;</span><br><span class="line">      this.driver.defineSteps(steps)</span><br><span class="line">      this.driver.start() // 默认0，可以指定初始起始步骤</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="steps-js"><a href="#steps-js" class="headerlink" title="steps.js"></a>steps.js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> steps = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">element</span>: <span class="string">&#x27;#hamburger-container&#x27;</span>, <span class="comment">// 目标高亮元素Id</span></span><br><span class="line">    <span class="attr">popover</span>: &#123; <span class="comment">// 弹窗信息配置</span></span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;标题xxx&#x27;</span>, <span class="comment">// 弹窗提示标题</span></span><br><span class="line">      <span class="attr">description</span>: <span class="string">&#x27;描述xxx&#x27;</span>, <span class="comment">// 弹窗提示描述</span></span><br><span class="line">      <span class="attr">position</span>: <span class="string">&#x27;botton&#x27;</span>, <span class="comment">// 提示方向  top | bottom | left | right</span></span><br><span class="line">      <span class="attr">showButtons</span>: <span class="literal">true</span>, <span class="comment">// 在底部是否显示控制按钮</span></span><br><span class="line">      <span class="attr">closeBtnText</span>: <span class="string">&#x27;关闭&#x27;</span>, <span class="comment">// 关闭按钮的文本</span></span><br><span class="line">      <span class="attr">nextBtnText</span>: <span class="string">&#x27;下一步&#x27;</span>, <span class="comment">// 当前步骤的下一步按钮文本</span></span><br><span class="line">      <span class="attr">prevBtnText</span>: <span class="string">&#x27;上一步&#x27;</span> <span class="comment">// 当前步骤的上一步按钮文本</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> steps</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-组件通信</title>
      <link href="/2022/05/26/vue-componentCommuni/"/>
      <url>/2022/05/26/vue-componentCommuni/</url>
      
        <content type="html"><![CDATA[<h3 id="一-兄弟组件传值EventBus"><a href="#一-兄弟组件传值EventBus" class="headerlink" title="一. 兄弟组件传值EventBus"></a>一. 兄弟组件传值EventBus</h3><h4 id="发送"><a href="#发送" class="headerlink" title="发送"></a>发送</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$EventBus</span>.$emit(<span class="string">&#x27;name&#x27;</span>, value)</span><br></pre></td></tr></table></figure><h4 id="接收"><a href="#接收" class="headerlink" title="接收"></a>接收</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$EventBus</span>.$on(<span class="string">&#x27;name&#x27;</span>, <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">   <span class="variable language_">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">       ...</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="二-父子组件传值props-emit"><a href="#二-父子组件传值props-emit" class="headerlink" title="二. 父子组件传值props/$emit"></a>二. 父子组件传值props/$emit</h3><h4 id="父传子"><a href="#父传子" class="headerlink" title="父传子"></a>父传子</h4><h5 id="父组件使用属性绑定一个变量"><a href="#父组件使用属性绑定一个变量" class="headerlink" title="父组件使用属性绑定一个变量"></a>父组件使用属性绑定一个变量</h5><h5 id="子组件用props接收（与created同级）"><a href="#子组件用props接收（与created同级）" class="headerlink" title="子组件用props接收（与created同级）"></a>子组件用props接收（与created同级）</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父组件发送</span></span><br><span class="line">&lt;components :data=<span class="string">&quot;data&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子组件接收</span></span><br><span class="line"><span class="attr">props</span>:&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;           </span><br><span class="line">      <span class="attr">type</span>:<span class="title class_">Array</span>,  <span class="comment">// 数据类型  多个类型[String, Number]</span></span><br><span class="line">      <span class="attr">require</span>:<span class="literal">true</span>,   <span class="comment">// 是否必填</span></span><br><span class="line">      <span class="attr">default</span>:<span class="function">() =&gt;</span> &#123; <span class="comment">// 默认</span></span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="子传父"><a href="#子传父" class="headerlink" title="子传父"></a>子传父</h4><h5 id="子组件使用this-emit绑定一个事件和值"><a href="#子组件使用this-emit绑定一个事件和值" class="headerlink" title="子组件使用this.$emit绑定一个事件和值"></a>子组件使用this.$emit绑定一个事件和值</h5><h5 id="父组件使用-子组件绑定事件-新方法名"><a href="#父组件使用-子组件绑定事件-新方法名" class="headerlink" title="父组件使用@子组件绑定事件=新方法名"></a>父组件使用@子组件绑定事件=新方法名</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子组件发送</span></span><br><span class="line"><span class="variable language_">this</span>.$emit(<span class="string">&#x27;eventName&#x27;</span>, value)</span><br><span class="line"></span><br><span class="line"><span class="comment">//父组件接收</span></span><br><span class="line">&lt;components @eventName=<span class="string">&quot;xxx&quot;</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="三-父子孙组件传值provide-inject（响应式）"><a href="#三-父子孙组件传值provide-inject（响应式）" class="headerlink" title="三. 父子孙组件传值provide/inject（响应式）"></a>三. 父子孙组件传值provide/inject（响应式）</h3><h6 id="2-2-0-新增"><a href="#2-2-0-新增" class="headerlink" title="2.2.0 新增"></a>2.2.0 新增</h6><h4 id="父组件"><a href="#父组件" class="headerlink" title="父组件"></a>父组件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">provide () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">streetOption</span>: <span class="function">() =&gt;</span> <span class="variable language_">this</span>.<span class="property">streetOption</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">streetOption</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">async</span> created () &#123;</span><br><span class="line">   <span class="keyword">await</span> <span class="title function_">api</span>(<span class="string">&#x27;xxx&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">streetOption</span> = res</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="子组件"><a href="#子组件" class="headerlink" title="子组件"></a>子组件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">    getOption () &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">streetOption</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">inject</span>: [<span class="string">&#x27;streetOption&#x27;</span>],</span><br><span class="line"> data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">strArr</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">watch</span>: &#123;</span><br><span class="line">    <span class="attr">getOption</span>: &#123;</span><br><span class="line">      handler (data) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">strArr</span> = data</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">immediate</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">deep</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="四-父子组件的双向绑定-sync"><a href="#四-父子组件的双向绑定-sync" class="headerlink" title="四. 父子组件的双向绑定.sync"></a>四. 父子组件的双向绑定.sync</h3><h6 id="2-3-0-新增"><a href="#2-3-0-新增" class="headerlink" title="2.3.0+ 新增"></a>2.3.0+ 新增</h6><h5 id="子组件改变了一个-prop-的值时，这个变化也会同步到父组件中所绑定，我们使用事件监听，实现起来比较长，所以使用-sync来进行缩写"><a href="#子组件改变了一个-prop-的值时，这个变化也会同步到父组件中所绑定，我们使用事件监听，实现起来比较长，所以使用-sync来进行缩写" class="headerlink" title="子组件改变了一个 prop 的值时，这个变化也会同步到父组件中所绑定，我们使用事件监听，实现起来比较长，所以使用.sync来进行缩写"></a>子组件改变了一个 prop 的值时，这个变化也会同步到父组件中所绑定，我们使用事件监听，实现起来比较长，所以使用.sync来进行缩写</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父组件</span></span><br><span class="line">&lt;<span class="title class_">Child</span> :money=<span class="string">&quot;dataApp&quot;</span> v-<span class="attr">on</span>:<span class="attr">update</span>:money=<span class="string">&quot;dataApp = $event&quot;</span>/&gt; </span><br><span class="line">就相当于 </span><br><span class="line">&lt;<span class="title class_">Child</span> :money.<span class="property">sync</span>=<span class="string">&quot;dataApp&quot;</span>/&gt; 。</span><br><span class="line"></span><br><span class="line"><span class="comment">//子组件</span></span><br><span class="line">&lt;button @click=<span class="string">&#x27;$emit(&#x27;</span><span class="attr">update</span>:money<span class="string">&#x27;,money-100)&#x27;</span>&gt;&lt;/button&gt;</span><br></pre></td></tr></table></figure><h3 id="五-父子多层组件单向传参-attrs"><a href="#五-父子多层组件单向传参-attrs" class="headerlink" title="五. 父子多层组件单向传参$attrs"></a>五. 父子多层组件单向传参$attrs</h3><h6 id="2-4-0-新增"><a href="#2-4-0-新增" class="headerlink" title="2.4.0+ 新增"></a>2.4.0+ 新增</h6><h5 id="二次封装的组件可使用v-bind-”-attrs”"><a href="#二次封装的组件可使用v-bind-”-attrs”" class="headerlink" title="二次封装的组件可使用v-bind=”$attrs”"></a>二次封装的组件可使用v-bind=”$attrs”</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//二次封装</span></span><br><span class="line">&lt;<span class="title class_">SecondChild</span> v-bind=<span class="string">&quot;$attrs&quot;</span>&gt;&lt;/<span class="title class_">SecondChild</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//父组件</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">components</span> <span class="attr">name</span>=<span class="string">&quot;张三&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">//某子组件内调用</span></span><br><span class="line"><span class="language-xml">$attrs.name</span></span><br></pre></td></tr></table></figure><h3 id="五-多个组件使用vuex传值"><a href="#五-多个组件使用vuex传值" class="headerlink" title="五. 多个组件使用vuex传值"></a>五. 多个组件使用vuex传值</h3>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Js-继承</title>
      <link href="/2022/05/19/js-Inherit/"/>
      <url>/2022/05/19/js-Inherit/</url>
      
        <content type="html"><![CDATA[<blockquote><h4 id="每个函数都有-prototype-原型对象。"><a href="#每个函数都有-prototype-原型对象。" class="headerlink" title="每个函数都有 prototype===原型对象。"></a>每个函数都有 prototype===原型对象。</h4><h4 id="函数实例化后，-proto-属性，指向原型对象"><a href="#函数实例化后，-proto-属性，指向原型对象" class="headerlink" title="函数实例化后，__proto__属性，指向原型对象"></a>函数实例化后，__proto__属性，指向原型对象</h4><h4 id="属性封装在构造函数中-function-A-name-this-name-name"><a href="#属性封装在构造函数中-function-A-name-this-name-name" class="headerlink" title="属性封装在构造函数中  function A(name){this.name=name}"></a>属性封装在构造函数中  function A(name){this.name=name}</h4><h4 id="方法定义在原型对象上-xxx-prototype-say-function-xxx"><a href="#方法定义在原型对象上-xxx-prototype-say-function-xxx" class="headerlink" title="方法定义在原型对象上  xxx.prototype.say=function(){xxx}"></a>方法定义在原型对象上  xxx.prototype.say=function(){xxx}</h4></blockquote><h3 id="1-原型链继承【复用】"><a href="#1-原型链继承【复用】" class="headerlink" title="1.原型链继承【复用】"></a>1.原型链继承【复用】</h3><h4 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h4><h4 id="复用，因为会继承"><a href="#复用，因为会继承" class="headerlink" title="复用，因为会继承"></a>复用，因为会继承</h4><h4 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h4><h4 id="1-无法给父构造函数传参"><a href="#1-无法给父构造函数传参" class="headerlink" title="1.无法给父构造函数传参"></a>1.无法给父构造函数传参</h4><h4 id="2-原型内的属性会被共享（基础数据类型不会继承改变，复杂数据类型会-数组，对象-）"><a href="#2-原型内的属性会被共享（基础数据类型不会继承改变，复杂数据类型会-数组，对象-）" class="headerlink" title="2.原型内的属性会被共享（基础数据类型不会继承改变，复杂数据类型会(数组，对象)）"></a>2.原型内的属性会被共享（基础数据类型不会继承改变，复杂数据类型会(数组，对象)）</h4><h4 id="实现："><a href="#实现：" class="headerlink" title="实现："></a>实现：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xxx.prototype=new xxx()</span><br><span class="line"></span><br><span class="line">B.prototype=new A()</span><br></pre></td></tr></table></figure><h3 id="2-构造函数【传参】"><a href="#2-构造函数【传参】" class="headerlink" title="2.构造函数【传参】"></a>2.构造函数【传参】</h3><h4 id="优点：-1"><a href="#优点：-1" class="headerlink" title="优点："></a>优点：</h4><h4 id="构造属性继承，还能继承多个构造函数（call多个）"><a href="#构造属性继承，还能继承多个构造函数（call多个）" class="headerlink" title="构造属性继承，还能继承多个构造函数（call多个）"></a>构造属性继承，还能继承多个构造函数（call多个）</h4><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><h4 id="不会继承方法，只纯纯继承构造函数"><a href="#不会继承方法，只纯纯继承构造函数" class="headerlink" title="不会继承方法，只纯纯继承构造函数"></a>不会继承方法，只纯纯继承构造函数</h4><h4 id="xxx-prototype-say-function-xxx-就是无"><a href="#xxx-prototype-say-function-xxx-就是无" class="headerlink" title="xxx.prototype.say=function(){xxx}  就是无"></a>xxx.prototype.say=function(){xxx}  就是无</h4><h6 id="实现：xxx-call-this-xxx…"><a href="#实现：xxx-call-this-xxx…" class="headerlink" title="实现：xxx.call(this,xxx…)"></a>实现：xxx.call(this,xxx…)</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function A(name,age)&#123;</span><br><span class="line"></span><br><span class="line">   this.name=name</span><br><span class="line"></span><br><span class="line">   this.age=age</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function B(name,age)&#123;</span><br><span class="line"></span><br><span class="line">   A.call(this,name,age)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-组合继承【传参，复用】"><a href="#3-组合继承【传参，复用】" class="headerlink" title="3.组合继承【传参，复用】"></a>3.组合继承【传参，复用】</h3><h4 id="结合原型链继承-构造函数方法"><a href="#结合原型链继承-构造函数方法" class="headerlink" title="结合原型链继承+构造函数方法"></a>结合原型链继承+构造函数方法</h4><h4 id="优点：-2"><a href="#优点：-2" class="headerlink" title="优点："></a>优点：</h4><h4 id="可以继承父类原型上的属性，可以传参，可复用，每个新实例引入的构造函数属性是私有的。"><a href="#可以继承父类原型上的属性，可以传参，可复用，每个新实例引入的构造函数属性是私有的。" class="headerlink" title="可以继承父类原型上的属性，可以传参，可复用，每个新实例引入的构造函数属性是私有的。"></a>可以继承父类原型上的属性，可以传参，可复用，每个新实例引入的构造函数属性是私有的。</h4><h4 id="缺点：-1"><a href="#缺点：-1" class="headerlink" title="缺点："></a>缺点：</h4><h4 id="调用了两次父类构造函数（耗内存），子类的构造函数会代替原型上的那个父类构造函数。"><a href="#调用了两次父类构造函数（耗内存），子类的构造函数会代替原型上的那个父类构造函数。" class="headerlink" title="调用了两次父类构造函数（耗内存），子类的构造函数会代替原型上的那个父类构造函数。"></a>调用了两次父类构造函数（耗内存），子类的构造函数会代替原型上的那个父类构造函数。</h4><h6 id="实现：-1"><a href="#实现：-1" class="headerlink" title="实现："></a>实现：</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function B(name,age)&#123;</span><br><span class="line"></span><br><span class="line">   A.call(this,name,age)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">B.prototype=new A()</span><br></pre></td></tr></table></figure><h5 id=""><a href="#" class="headerlink" title=""></a></h5><h3 id="4-寄生组合继承-常用"><a href="#4-寄生组合继承-常用" class="headerlink" title="4.寄生组合继承(常用)"></a>4.寄生组合继承(常用)</h3><h4 id="创建一个对象只想-A-prototype-，这样修改就不影响B的prototype"><a href="#创建一个对象只想-A-prototype-，这样修改就不影响B的prototype" class="headerlink" title="创建一个对象只想(A.prototype)，这样修改就不影响B的prototype"></a>创建一个对象只想(A.prototype)，这样修改就不影响B的prototype</h4><h4 id="instanceof-判断元素是否在另一个元素的原型链上"><a href="#instanceof-判断元素是否在另一个元素的原型链上" class="headerlink" title="instanceof  判断元素是否在另一个元素的原型链上"></a>instanceof  判断元素是否在另一个元素的原型链上</h4><h6 id="实现：-2"><a href="#实现：-2" class="headerlink" title="实现："></a>实现：</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function B(name,age)&#123;</span><br><span class="line"></span><br><span class="line">   A.call(this,name,age)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">B.prototype=Object.create(A.prototype)</span><br></pre></td></tr></table></figure><h3 id="5-原型式继承"><a href="#5-原型式继承" class="headerlink" title="5.原型式继承"></a>5.原型式继承</h3><h4 id="重点：用一个函数包装一个对象，然后返回这个函数的调用，这个函数就变成了个可以随意增添属性的实例或对象。object-create-就是这个原理。"><a href="#重点：用一个函数包装一个对象，然后返回这个函数的调用，这个函数就变成了个可以随意增添属性的实例或对象。object-create-就是这个原理。" class="headerlink" title="重点：用一个函数包装一个对象，然后返回这个函数的调用，这个函数就变成了个可以随意增添属性的实例或对象。object.create()就是这个原理。"></a>重点：用一个函数包装一个对象，然后返回这个函数的调用，这个函数就变成了个可以随意增添属性的实例或对象。object.create()就是这个原理。</h4><h4 id="特点：类似于复制一个对象，用函数来包装。"><a href="#特点：类似于复制一个对象，用函数来包装。" class="headerlink" title="特点：类似于复制一个对象，用函数来包装。"></a>特点：类似于复制一个对象，用函数来包装。</h4><h4 id="缺点：1、所有实例都会继承原型上的属性。"><a href="#缺点：1、所有实例都会继承原型上的属性。" class="headerlink" title="缺点：1、所有实例都会继承原型上的属性。"></a>缺点：1、所有实例都会继承原型上的属性。</h4><h4 id="2、无法实现复用。（新实例属性都是后面添加的）"><a href="#2、无法实现复用。（新实例属性都是后面添加的）" class="headerlink" title="2、无法实现复用。（新实例属性都是后面添加的）"></a>2、无法实现复用。（新实例属性都是后面添加的）</h4><h5 id="-1"><a href="#-1" class="headerlink" title=""></a></h5>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Js-循环</title>
      <link href="/2022/05/19/js-for/"/>
      <url>/2022/05/19/js-for/</url>
      
        <content type="html"><![CDATA[<h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><h3 id="1-foreach"><a href="#1-foreach" class="headerlink" title="1.foreach"></a>1.foreach</h3><h4 id="遍历全部数组"><a href="#遍历全部数组" class="headerlink" title="遍历全部数组"></a>遍历全部数组</h4><h4 id="建议场景：对多个对象修改或操作时使用"><a href="#建议场景：对多个对象修改或操作时使用" class="headerlink" title="建议场景：对多个对象修改或操作时使用"></a>建议场景：对多个对象修改或操作时使用</h4><h4 id="缺点：不支持break，continue"><a href="#缺点：不支持break，continue" class="headerlink" title="缺点：不支持break，continue"></a>缺点：不支持break，continue</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=[<span class="string">&#x27;苹果&#x27;</span>,<span class="string">&#x27;香蕉&#x27;</span>,<span class="string">&#x27;鸡腿&#x27;</span>,<span class="string">&#x27;考拉&#x27;</span>]</span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">value, key</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(value, key)</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">  苹果 0</span><br><span class="line">  香蕉 1</span><br><span class="line">  鸡腿 2</span><br><span class="line">  考拉 3</span><br></pre></td></tr></table></figure><h3 id="2-every"><a href="#2-every" class="headerlink" title="2.every"></a>2.every</h3><h4 id="遍历数组的每一项，如果有有一项不满足条件，则表达式返回false-剩余的项将不会再执行检测；"><a href="#遍历数组的每一项，如果有有一项不满足条件，则表达式返回false-剩余的项将不会再执行检测；" class="headerlink" title="遍历数组的每一项，如果有有一项不满足条件，则表达式返回false,剩余的项将不会再执行检测；"></a>遍历数组的每一项，如果有有一项不满足条件，则表达式返回false,剩余的项将不会再执行检测；</h4><h4 id="如果遍历完数组后，每一项都符合条件，则返回true"><a href="#如果遍历完数组后，每一项都符合条件，则返回true" class="headerlink" title="如果遍历完数组后，每一项都符合条件，则返回true"></a>如果遍历完数组后，每一项都符合条件，则返回true</h4><h4 id="建议场景：遍历判断数组对象的某值是否必填"><a href="#建议场景：遍历判断数组对象的某值是否必填" class="headerlink" title="建议场景：遍历判断数组对象的某值是否必填"></a>建议场景：遍历判断数组对象的某值是否必填</h4><h4 id="返回值：符合true，不符合false"><a href="#返回值：符合true，不符合false" class="headerlink" title="返回值：符合true，不符合false"></a>返回值：符合true，不符合false</h4><h4 id="缺点：不支持break，continue-1"><a href="#缺点：不支持break，continue-1" class="headerlink" title="缺点：不支持break，continue"></a>缺点：不支持break，continue</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=[</span><br><span class="line">    &#123; <span class="attr">name</span>:<span class="string">&#x27;陈椰&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">20</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>:<span class="string">&#x27;陈和&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="literal">null</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>:<span class="string">&#x27;倩尔&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">20</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">let</span> newArr = arr.<span class="title function_">every</span>(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;item&#x27;</span>,item)</span><br><span class="line">    <span class="keyword">return</span> item.<span class="property">age</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">item &#123;name: &#x27;陈椰&#x27;, sex: 0, age: 20, createTime: &#x27;2022-06-03&#x27;&#125;</span><br><span class="line">item &#123;name: &#x27;陈和&#x27;, sex: 0, age: null, createTime: &#x27;2022-06-03&#x27;&#125;</span><br><span class="line">false</span><br></pre></td></tr></table></figure><h3 id="3-forin"><a href="#3-forin" class="headerlink" title="3.forin"></a>3.forin</h3><h4 id="遍历的是下标，支持break，continue"><a href="#遍历的是下标，支持break，continue" class="headerlink" title="遍历的是下标，支持break，continue"></a>遍历的是下标，支持break，continue</h4><h4 id="建议场景：对象遍历"><a href="#建议场景：对象遍历" class="headerlink" title="建议场景：对象遍历"></a>建议场景：对象遍历</h4><h4 id="缺点：数组-a-8，会把a这个字符串当索引"><a href="#缺点：数组-a-8，会把a这个字符串当索引" class="headerlink" title="缺点：数组.a=8，会把a这个字符串当索引"></a>缺点：数组.a=8，会把a这个字符串当索引</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> info=&#123;<span class="attr">name</span>: <span class="string">&#x27;陈椰&#x27;</span>, <span class="attr">sex</span>: <span class="number">0</span>, <span class="attr">age</span>: <span class="number">20</span>, <span class="attr">createTime</span>: <span class="string">&#x27;2022-06-03&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> info) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key,info[key]) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">name 陈椰</span><br><span class="line">sex 0</span><br><span class="line">age 20</span><br><span class="line">createTime 2022-06-03</span><br></pre></td></tr></table></figure><h3 id="4-forof"><a href="#4-forof" class="headerlink" title="4.forof"></a>4.forof</h3><blockquote><p>es6</p></blockquote><h4 id="4-1-数组循环"><a href="#4-1-数组循环" class="headerlink" title="4.1 数组循环"></a>4.1 数组循环</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> info=[&#123;<span class="attr">name</span>: <span class="string">&#x27;陈椰&#x27;</span>, <span class="attr">sex</span>: <span class="number">0</span>, <span class="attr">age</span>: <span class="number">20</span>, <span class="attr">createTime</span>: <span class="string">&#x27;2022-06-03&#x27;</span>&#125;]</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> info) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(item) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;陈椰&quot;,</span><br><span class="line">    &quot;sex&quot;: 0,</span><br><span class="line">    &quot;age&quot;: 20,</span><br><span class="line">    &quot;createTime&quot;: &quot;2022-06-03&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-解构使用"><a href="#4-2-解构使用" class="headerlink" title="4.2 解构使用"></a>4.2 解构使用</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> info=[</span><br><span class="line">  &#123; <span class="attr">name</span>: <span class="string">&#x27;陈椰&#x27;</span>, <span class="attr">sex</span>: <span class="number">0</span>, <span class="attr">age</span>: <span class="number">20</span>, <span class="attr">createTime</span>: <span class="string">&#x27;2022-06-03&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;陈和&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="literal">null</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> &#123;name&#125; <span class="keyword">of</span> info) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(name) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">陈椰</span><br><span class="line">陈和</span><br></pre></td></tr></table></figure><h4 id="4-3-字符串遍历"><a href="#4-3-字符串遍历" class="headerlink" title="4.3 字符串遍历"></a>4.3 字符串遍历</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str=<span class="string">&#x27;JavaScript&#x27;</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> str) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(item)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">J</span><br><span class="line">a</span><br><span class="line">v</span><br><span class="line">a</span><br><span class="line">S</span><br><span class="line">c</span><br><span class="line">r</span><br><span class="line">i</span><br><span class="line">p</span><br><span class="line">t</span><br></pre></td></tr></table></figure><h3 id="5-some"><a href="#5-some" class="headerlink" title="5.some"></a>5.some</h3><blockquote><p>es6</p></blockquote><h4 id="和every实现方式一样，判断条件相反，最后返回新数组；"><a href="#和every实现方式一样，判断条件相反，最后返回新数组；" class="headerlink" title="和every实现方式一样，判断条件相反，最后返回新数组；"></a>和every实现方式一样，判断条件相反，最后返回新数组；</h4><h2 id="查找值"><a href="#查找值" class="headerlink" title="查找值"></a>查找值</h2><h3 id="1-filter"><a href="#1-filter" class="headerlink" title="1.filter"></a>1.filter</h3><blockquote><p>es5</p></blockquote><h4 id="使用场景：获取对象数组内满足条件项。"><a href="#使用场景：获取对象数组内满足条件项。" class="headerlink" title="使用场景：获取对象数组内满足条件项。"></a>使用场景：获取对象数组内满足条件项。</h4><h4 id="返回值：新数组。"><a href="#返回值：新数组。" class="headerlink" title="返回值：新数组。"></a>返回值：新数组。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let [新数组]=[原数组].filter(function(item)&#123;</span><br><span class="line">  return [xxx条件]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=[</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;陈椰&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">20</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;陈和&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">12</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;倩尔&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">18</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">let</span> newArr=arr.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> item.<span class="property">age</span>&gt;<span class="number">15</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;name&quot;: &quot;陈椰&quot;,</span><br><span class="line">        &quot;sex&quot;: 0,</span><br><span class="line">        &quot;age&quot;: 20,</span><br><span class="line">        &quot;createTime&quot;: &quot;2022-06-03&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;name&quot;: &quot;倩尔&quot;,</span><br><span class="line">        &quot;sex&quot;: 0,</span><br><span class="line">        &quot;age&quot;: 18,</span><br><span class="line">        &quot;createTime&quot;: &quot;2022-06-03&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="2-find-返回满足条件的第一个，找到后不再继续遍历，返回对应元素，找不到返回undefined"><a href="#2-find-返回满足条件的第一个，找到后不再继续遍历，返回对应元素，找不到返回undefined" class="headerlink" title="2. find 返回满足条件的第一个，找到后不再继续遍历，返回对应元素，找不到返回undefined"></a>2. find 返回满足条件的第一个，找到后不再继续遍历，返回对应元素，找不到返回undefined</h3><blockquote><p>es6</p></blockquote><h4 id="建议场景：获取第一个目标元素内容。"><a href="#建议场景：获取第一个目标元素内容。" class="headerlink" title="建议场景：获取第一个目标元素内容。"></a>建议场景：获取第一个目标元素内容。</h4><h4 id="返回值：元素内容。"><a href="#返回值：元素内容。" class="headerlink" title="返回值：元素内容。"></a>返回值：元素内容。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let [元素内容]=[原数组].find(function(item)&#123;</span><br><span class="line">  return [xxx条件]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=[</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;陈椰&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">20</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;陈和&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="literal">null</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;倩尔&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">20</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">let</span> newVal=arr.<span class="title function_">find</span>(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> item.<span class="property">name</span>==<span class="string">&quot;陈和&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newVal);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;: &quot;陈和&quot;,</span><br><span class="line">    &quot;sex&quot;: 0,</span><br><span class="line">    &quot;age&quot;: null,</span><br><span class="line">    &quot;createTime&quot;: &quot;2022-06-03&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-findIndex-返回满足条件的第一个位置，找到后不再继续遍历，返回对应下标，找不到返回-1"><a href="#3-findIndex-返回满足条件的第一个位置，找到后不再继续遍历，返回对应下标，找不到返回-1" class="headerlink" title="3. findIndex 返回满足条件的第一个位置，找到后不再继续遍历，返回对应下标，找不到返回 -1"></a>3. findIndex 返回满足条件的第一个位置，找到后不再继续遍历，返回对应下标，找不到返回 -1</h4><blockquote><p>es6</p></blockquote><h4 id="建议场景：获取第一个目标元素下标。"><a href="#建议场景：获取第一个目标元素下标。" class="headerlink" title="建议场景：获取第一个目标元素下标。"></a>建议场景：获取第一个目标元素下标。</h4><h4 id="返回值：元素下标。"><a href="#返回值：元素下标。" class="headerlink" title="返回值：元素下标。"></a>返回值：元素下标。</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let [下标名]=[原数组].findIndex(function(item)&#123;</span><br><span class="line">  return [xxx条件]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=[</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;陈椰&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">20</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;陈和&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="literal">null</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;倩尔&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">20</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">let</span> index=arr.<span class="title function_">findIndex</span>(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> item.<span class="property">name</span>===<span class="string">&quot;陈和&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(index);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h2 id="修改值"><a href="#修改值" class="headerlink" title="修改值"></a>修改值</h2><h3 id="1-map"><a href="#1-map" class="headerlink" title="1. map"></a>1. map</h3><h4 id="遍历数组的每一项，最后返回一个新的被改变过值之后的数组（map需return）"><a href="#遍历数组的每一项，最后返回一个新的被改变过值之后的数组（map需return）" class="headerlink" title="遍历数组的每一项，最后返回一个新的被改变过值之后的数组（map需return）"></a>遍历数组的每一项，最后返回一个新的被改变过值之后的数组（map需return）</h4><h4 id="建议场景：想修改数组的值。"><a href="#建议场景：想修改数组的值。" class="headerlink" title="建议场景：想修改数组的值。"></a>建议场景：想修改数组的值。</h4><h4 id="返回值：新数组。-1"><a href="#返回值：新数组。-1" class="headerlink" title="返回值：新数组。"></a>返回值：新数组。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=[</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;陈椰&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">20</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span>&#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;陈和&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="literal">null</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;倩尔&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">20</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">let</span> newArr=arr.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="attr">name</span>:item.<span class="property">name</span>+<span class="string">&#x27;001&#x27;</span>,<span class="attr">sex</span>:item.<span class="property">sex</span>&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;name&quot;: &quot;陈椰001&quot;,</span><br><span class="line">        &quot;sex&quot;: 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;name&quot;: &quot;陈和001&quot;,</span><br><span class="line">        &quot;sex&quot;: 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;name&quot;: &quot;倩尔001&quot;,</span><br><span class="line">        &quot;sex&quot;: 0</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="1-reduce"><a href="#1-reduce" class="headerlink" title="1. reduce"></a>1. reduce</h3><h4 id="arr-reduce-gt-初始数值-两个参数（初始值pre默认数组第一项-next数组的下一项-如果有初始值，则第一次的next是数组的第一项，如果没有初始值。默认数组的第一项为初始值。遍历回调函数，最后得到回调的值；"><a href="#arr-reduce-gt-初始数值-两个参数（初始值pre默认数组第一项-next数组的下一项-如果有初始值，则第一次的next是数组的第一项，如果没有初始值。默认数组的第一项为初始值。遍历回调函数，最后得到回调的值；" class="headerlink" title="arr.reduce(()=&gt;{},初始数值) 两个参数（初始值pre默认数组第一项,next数组的下一项, 如果有初始值，则第一次的next是数组的第一项，如果没有初始值。默认数组的第一项为初始值。遍历回调函数，最后得到回调的值；"></a>arr.reduce(()=&gt;{},初始数值) 两个参数（初始值pre默认数组第一项,next数组的下一项, 如果有初始值，则第一次的next是数组的第一项，如果没有初始值。默认数组的第一项为初始值。遍历回调函数，最后得到回调的值；</h4><h4 id="建议场景：累加计算；"><a href="#建议场景：累加计算；" class="headerlink" title="建议场景：累加计算；"></a>建议场景：累加计算；</h4><h4 id="返回值：累加后的总数；"><a href="#返回值：累加后的总数；" class="headerlink" title="返回值：累加后的总数；"></a>返回值：累加后的总数；</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=[</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;陈椰&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">20</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;陈和&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="literal">null</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>:<span class="string">&#x27;倩尔&#x27;</span>,<span class="attr">sex</span>:<span class="number">0</span>, <span class="attr">age</span>:<span class="number">20</span>, <span class="attr">createTime</span>:<span class="string">&#x27;2022-06-03&#x27;</span> &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">let</span> ageCount=arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">pre,next</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> next.<span class="property">age</span></span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ageCount)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">20</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谷歌控制台-F12</title>
      <link href="/2022/05/12/google-console/"/>
      <url>/2022/05/12/google-console/</url>
      
        <content type="html"><![CDATA[<h2 id="一-通过控制台知道数据类型"><a href="#一-通过控制台知道数据类型" class="headerlink" title="一. 通过控制台知道数据类型"></a>一. 通过控制台知道数据类型</h2><h4 id="灰色表示字符串"><a href="#灰色表示字符串" class="headerlink" title="灰色表示字符串"></a>灰色表示字符串</h4><h4 id="蓝色表示数值"><a href="#蓝色表示数值" class="headerlink" title="蓝色表示数值"></a>蓝色表示数值</h4><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="一-Chrome谷歌开发插件"><a href="#一-Chrome谷歌开发插件" class="headerlink" title="一. Chrome谷歌开发插件"></a>一. Chrome谷歌开发插件</h3><h4 id="1-FH（前端助手）"><a href="#1-FH（前端助手）" class="headerlink" title="1. FH（前端助手）"></a>1. FH（前端助手）</h4><p><a href="https://chrome.google.com/webstore/detail/fehelper%E5%89%8D%E7%AB%AF%E5%8A%A9%E6%89%8B/pkgccpejnmalmdinmhkkfafefagiiiad/related?hl=zh_CN">https://chrome.google.com/webstore/detail/fehelper%E5%89%8D%E7%AB%AF%E5%8A%A9%E6%89%8B/pkgccpejnmalmdinmhkkfafefagiiiad/related?hl=zh_CN</a></p><h3 id="2-vue数据"><a href="#2-vue数据" class="headerlink" title="2. vue数据"></a>2. vue数据</h3><p><a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd">https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd</a></p><h3 id="3-模拟假数据"><a href="#3-模拟假数据" class="headerlink" title="3. 模拟假数据"></a>3. 模拟假数据</h3><p><a href="https://chrome.google.com/webstore/detail/ajax-interceptor/nhpjggchkhnlbgdfcbgpdpkifemomkpg/related?hl=zh-CN">https://chrome.google.com/webstore/detail/ajax-interceptor/nhpjggchkhnlbgdfcbgpdpkifemomkpg/related?hl=zh-CN</a></p><h3 id="4-冻结网页，节约资源"><a href="#4-冻结网页，节约资源" class="headerlink" title="4. 冻结网页，节约资源"></a>4. 冻结网页，节约资源</h3><p><a href="https://chrome.google.com/webstore/detail/idnlcoeldnflogjijilgbemhafanlddm">https://chrome.google.com/webstore/detail/idnlcoeldnflogjijilgbemhafanlddm</a></p><h3 id="5-性能测试Lighthouse"><a href="#5-性能测试Lighthouse" class="headerlink" title="5. 性能测试Lighthouse"></a>5. 性能测试Lighthouse</h3><p><a href="https://chrome.google.com/webstore/detail/blipmdconlkpinefehnmjammfjpmpbjk">https://chrome.google.com/webstore/detail/blipmdconlkpinefehnmjammfjpmpbjk</a></p><h2 id="二-Chrome插件包获取"><a href="#二-Chrome插件包获取" class="headerlink" title="二.Chrome插件包获取"></a>二.Chrome插件包获取</h2><h4 id="1-找到谷歌在本地的插件"><a href="#1-找到谷歌在本地的插件" class="headerlink" title="1.找到谷歌在本地的插件"></a>1.找到谷歌在本地的插件</h4><h4 id="1-1浏览器搜索chrome-version"><a href="#1-1浏览器搜索chrome-version" class="headerlink" title="1.1浏览器搜索chrome://version/"></a>1.1浏览器搜索chrome://version/</h4><h4 id="1-2复制个人资料路径打开"><a href="#1-2复制个人资料路径打开" class="headerlink" title="1.2复制个人资料路径打开"></a>1.2复制个人资料路径打开</h4><h4 id="2-本地路径的Extensions下选择和你想要的插件的ID同名文件"><a href="#2-本地路径的Extensions下选择和你想要的插件的ID同名文件" class="headerlink" title="2.本地路径的Extensions下选择和你想要的插件的ID同名文件"></a>2.本地路径的Extensions下选择和你想要的插件的ID同名文件</h4>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jsdoc一个JavaScript API文档生成器</title>
      <link href="/2022/05/08/tool-jsdoc/"/>
      <url>/2022/05/08/tool-jsdoc/</url>
      
        <content type="html"><![CDATA[<h3 id="官网地址：https-github-com-jsdoc-jsdoc"><a href="#官网地址：https-github-com-jsdoc-jsdoc" class="headerlink" title="官网地址：https://github.com/jsdoc/jsdoc"></a>官网地址：<a href="https://github.com/jsdoc/jsdoc">https://github.com/jsdoc/jsdoc</a></h3><h3 id="一-jsdoc安装"><a href="#一-jsdoc安装" class="headerlink" title="一.  jsdoc安装"></a>一.  jsdoc安装</h3><ol><li><h4 id="npm全局安装"><a href="#npm全局安装" class="headerlink" title="npm全局安装"></a>npm全局安装</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g jsdoc</span><br></pre></td></tr></table></figure></li><li><h4 id="vscode安装jsdoc插件-在函数前输入-回车就会自动生成已有参数注释）"><a href="#vscode安装jsdoc插件-在函数前输入-回车就会自动生成已有参数注释）" class="headerlink" title="vscode安装jsdoc插件 在函数前输入/**回车就会自动生成已有参数注释）"></a>vscode安装jsdoc插件 在函数前输入/**回车就会自动生成已有参数注释）</h4></li></ol><h3 id="二-jsdoc执行"><a href="#二-jsdoc执行" class="headerlink" title="二.  jsdoc执行"></a>二.  jsdoc执行</h3><ul><li><h4 id="单文件编译"><a href="#单文件编译" class="headerlink" title="单文件编译"></a>单文件编译</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jsdoc XXXX.js</span><br></pre></td></tr></table></figure><h4 id="结果：生成out文件"><a href="#结果：生成out文件" class="headerlink" title="结果：生成out文件"></a>结果：生成out文件</h4></li><li><h4 id="多文件运行（vue项目下全部js）"><a href="#多文件运行（vue项目下全部js）" class="headerlink" title="多文件运行（vue项目下全部js）"></a>多文件运行（vue项目下全部js）</h4></li></ul><h3 id="三-jsdoc编写规则（常用）"><a href="#三-jsdoc编写规则（常用）" class="headerlink" title="三.  jsdoc编写规则（常用）"></a>三.  jsdoc编写规则（常用）</h3><ul><li><h6 id="constructor-构造函数声明注释。"><a href="#constructor-构造函数声明注释。" class="headerlink" title="@constructor 构造函数声明注释。"></a><code>@constructor</code> 构造函数声明注释。</h6></li><li><h6 id="param-参数注释。"><a href="#param-参数注释。" class="headerlink" title="@param 参数注释。"></a><code>@param</code> 参数注释。</h6></li><li><h6 id="return-返回值注释。"><a href="#return-返回值注释。" class="headerlink" title="@return 返回值注释。"></a><code>@return</code> 返回值注释。</h6></li><li><h6 id="example-示例注释。"><a href="#example-示例注释。" class="headerlink" title="@example 示例注释。"></a><code>@example</code> 示例注释。</h6></li><li><h6 id="overview-对当前代码文件的描述。"><a href="#overview-对当前代码文件的描述。" class="headerlink" title="@overview 对当前代码文件的描述。"></a><code>@overview</code> 对当前代码文件的描述。</h6></li><li><h6 id="copyright-代码的版权信息。"><a href="#copyright-代码的版权信息。" class="headerlink" title="@copyright 代码的版权信息。"></a><code>@copyright</code> 代码的版权信息。</h6></li><li><h6 id="author-lt-name-gt-lt-emailAddress-gt-代码的作者信息。"><a href="#author-lt-name-gt-lt-emailAddress-gt-代码的作者信息。" class="headerlink" title="@author &lt;name&gt; [&lt;emailAddress&gt;] 代码的作者信息。"></a><code>@author &lt;name&gt; [&lt;emailAddress&gt;]</code> 代码的作者信息。</h6></li><li><h6 id="version-当前代码的版本。"><a href="#version-当前代码的版本。" class="headerlink" title="@version 当前代码的版本。"></a><code>@version</code> 当前代码的版本。</h6></li></ul><h3 id="四-示例"><a href="#四-示例" class="headerlink" title="四. 示例"></a>四. 示例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Book类 代表一本书.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@constructor</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">title</span> - 本书的书名.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">author</span> - 本书的作者.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Book</span>(<span class="params">title, author</span>) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** This is a description of the foo function. */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="执行结果为："><a href="#执行结果为：" class="headerlink" title="执行结果为："></a>执行结果为：</h6><img src="E:\gongzuo\Blog\source\_image\jsdoc\jsdoc_0.png" alt="图片加载失败" style="zoom:80%;" /><p><img src="E:\gongzuo\Blog\source_image\jsdoc\jsdoc_1.png" alt="jsdoc_1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用github+hexo快速搭建个人博客</title>
      <link href="/2022/05/08/tool-Blog/"/>
      <url>/2022/05/08/tool-Blog/</url>
      
        <content type="html"><![CDATA[<h3 id="Github官网地址：https-github-com"><a href="#Github官网地址：https-github-com" class="headerlink" title="Github官网地址：https://github.com/"></a>Github官网地址：<a href="https://github.com/">https://github.com/</a></h3><h3 id="Hexo官网地址-https-hexo-io-docs-configuration-html"><a href="#Hexo官网地址-https-hexo-io-docs-configuration-html" class="headerlink" title="Hexo官网地址:https://hexo.io/docs/configuration.html"></a>Hexo官网地址:<a href="https://hexo.io/docs/configuration.html">https://hexo.io/docs/configuration.html</a></h3><h2 id="初始搭建"><a href="#初始搭建" class="headerlink" title="初始搭建"></a>初始搭建</h2><h3 id="一-新建Git仓库配置"><a href="#一-新建Git仓库配置" class="headerlink" title="一.新建Git仓库配置"></a>一.新建Git仓库配置</h3><h4 id="仓库名：-用户名-github-io-其中-github-io-是固定写法"><a href="#仓库名：-用户名-github-io-其中-github-io-是固定写法" class="headerlink" title="仓库名：[用户名].github.io            其中.github.io/是固定写法"></a>仓库名：[用户名]<a href="https://yz-001.github.io/">.github.io </a>           其中<a href="https://yz-001.github.io/">.github.io/</a>是固定写法</h4><h4 id="权限：公有"><a href="#权限：公有" class="headerlink" title="权限：公有"></a>权限：公有</h4><h3 id="二-本地安装部署到Git"><a href="#二-本地安装部署到Git" class="headerlink" title="二.本地安装部署到Git"></a>二.本地安装部署到Git</h3><ol><li><h3 id="全局安装"><a href="#全局安装" class="headerlink" title="全局安装"></a>全局安装</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g </span><br></pre></td></tr></table></figure></li><li><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init  </span><br></pre></td></tr></table></figure></li><li><h3 id="在根目录-config-yml修改git信息"><a href="#在根目录-config-yml修改git信息" class="headerlink" title="在根目录_config.yml修改git信息"></a>在根目录_config.yml修改git信息</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">deploye:  </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  <span class="title">type</span>: &#x27;<span class="title">git</span>&#x27; </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  <span class="title">repository</span>: [刚创建的<span class="title">git</span>地址]  </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  <span class="title">branch</span>: [<span class="title">git</span>分支]  </span></span><br></pre></td></tr></table></figure></li><li><h3 id="安装Git的部署工具"><a href="#安装Git的部署工具" class="headerlink" title="安装Git的部署工具"></a>安装Git的部署工具</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git -S</span><br></pre></td></tr></table></figure></li><li><h3 id="生成页面"><a href="#生成页面" class="headerlink" title="生成页面"></a>生成页面</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g </span><br></pre></td></tr></table></figure></li><li><h3 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li><h3 id="上传到Git"><a href="#上传到Git" class="headerlink" title="上传到Git"></a>上传到Git</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d </span><br></pre></td></tr></table></figure></li></ol><h3 id="三-打开网址-你的git用户名-github-io"><a href="#三-打开网址-你的git用户名-github-io" class="headerlink" title="三.打开网址[你的git用户名].github.io"></a>三.打开网址[你的git用户名].github.io</h3><h5 id="如果失败可以查看一下Settings-pages下的地址是否一致。"><a href="#如果失败可以查看一下Settings-pages下的地址是否一致。" class="headerlink" title="如果失败可以查看一下Settings/pages下的地址是否一致。"></a>如果失败可以查看一下Settings/pages下的地址是否一致。</h5><hr><h2 id="博客信息配置"><a href="#博客信息配置" class="headerlink" title="博客信息配置"></a>博客信息配置</h2><h4 id="在根目录-config-yml修改-（以下只展示修改的常见配置）"><a href="#在根目录-config-yml修改-（以下只展示修改的常见配置）" class="headerlink" title="在根目录_config.yml修改,（以下只展示修改的常见配置）"></a>在根目录_config.yml修改,（以下只展示修改的常见配置）</h4><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">title: [&#x27;博客标题&#x27;]</span><br><span class="line">description: [&#x27;描述&#x27;]</span><br><span class="line">author: [博客作者]</span><br><span class="line">language: [语言]</span><br><span class="line">timezone: [时间]</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">[分类一]: [对应映射名]</span><br><span class="line">[分类二]: [对应映射名]</span><br><span class="line">tag_map:</span><br><span class="line">  [标签一]: [对应映射名] </span><br><span class="line">  [标签二]: [对应映射名] </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="博客文章操作"><a href="#博客文章操作" class="headerlink" title="博客文章操作"></a>博客文章操作</h2><ol><li><h3 id="创建分页（分类，标签等方法相同）"><a href="#创建分页（分类，标签等方法相同）" class="headerlink" title="创建分页（分类，标签等方法相同）"></a>创建分页（分类，标签等方法相同）</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [创建的分页名]</span><br></pre></td></tr></table></figure><h4 id="如果是分类-标签或其他的导航栏链接，需在type设置对应值，比如标签对应tag"><a href="#如果是分类-标签或其他的导航栏链接，需在type设置对应值，比如标签对应tag" class="headerlink" title="如果是分类, 标签或其他的导航栏链接，需在type设置对应值，比如标签对应tag"></a>如果是分类, 标签或其他的导航栏链接，需在type设置对应值，比如标签对应tag</h4></li><li><h3 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [创建的文章名]</span><br></pre></td></tr></table></figure><h4 id="默认创建在根目录的-source-posts文件夹下，格式如下"><a href="#默认创建在根目录的-source-posts文件夹下，格式如下" class="headerlink" title="默认创建在根目录的/source/_posts文件夹下，格式如下"></a>默认创建在根目录的/source/_posts文件夹下，格式如下</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="function">title: [标题]</span></span><br><span class="line"><span class="function"><span class="title">date</span>: 2022-04-20 14:04:43</span></span><br><span class="line"><span class="function"><span class="title">categories</span>: [分类名]</span></span><br><span class="line"><span class="function"><span class="title">tags</span>: [标签名]</span></span><br><span class="line"><span class="function"><span class="title">cover</span>: [文章缩略图]</span></span><br><span class="line"><span class="function">---</span></span><br><span class="line"><span class="function">文章内容</span></span><br></pre></td></tr></table></figure><h4 id="可使用-Typora-exe-编译-md"><a href="#可使用-Typora-exe-编译-md" class="headerlink" title="可使用 Typora.exe 编译 md"></a>可使用 Typora.exe 编译 md</h4></li><li><h3 id="修改后的基本操作"><a href="#修改后的基本操作" class="headerlink" title="修改后的基本操作"></a>修改后的基本操作</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h4 id="对应清缓存，编译，上传，如果还会继续修改第三步可改为hexo-s运行。"><a href="#对应清缓存，编译，上传，如果还会继续修改第三步可改为hexo-s运行。" class="headerlink" title="对应清缓存，编译，上传，如果还会继续修改第三步可改为hexo s运行。"></a>对应清缓存，编译，上传，如果还会继续修改第三步可改为hexo s运行。</h4></li><li><h3 id="删除文章"><a href="#删除文章" class="headerlink" title="删除文章"></a>删除文章</h3><h4 id="在source-posts目录下删除一篇文章，然后执行上一点的修改后的基本操作"><a href="#在source-posts目录下删除一篇文章，然后执行上一点的修改后的基本操作" class="headerlink" title="在source/_posts目录下删除一篇文章，然后执行上一点的修改后的基本操作"></a>在source/_posts目录下删除一篇文章，然后执行上一点的修改后的基本操作</h4></li></ol><hr><h2 id="博客主题"><a href="#博客主题" class="headerlink" title="博客主题"></a>博客主题</h2><h3 id="一-选择主题-推荐以下-："><a href="#一-选择主题-推荐以下-：" class="headerlink" title="一.选择主题(推荐以下)："></a>一.选择主题(推荐以下)：</h3><h3 id="butterfly-https-github-com-jerryc127-hexo-theme-butterfly"><a href="#butterfly-https-github-com-jerryc127-hexo-theme-butterfly" class="headerlink" title="butterfly     https://github.com/jerryc127/hexo-theme-butterfly"></a>butterfly     <a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a></h3><h3 id="fluid-https-github-com-fluid-dev-hexo-theme-fluid"><a href="#fluid-https-github-com-fluid-dev-hexo-theme-fluid" class="headerlink" title="fluid             https://github.com/fluid-dev/hexo-theme-fluid"></a>fluid             <a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></h3><h3 id="二-使用主题-下面以butterfly为例"><a href="#二-使用主题-下面以butterfly为例" class="headerlink" title="二.使用主题(下面以butterfly为例)"></a>二.使用主题(下面以butterfly为例)</h3><h3 id="1-安装butterfly"><a href="#1-安装butterfly" class="headerlink" title="1.安装butterfly"></a>1.安装butterfly</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><h4 id="在博客代码根目录执行"><a href="#在博客代码根目录执行" class="headerlink" title="在博客代码根目录执行"></a>在博客代码根目录执行</h4><h3 id="2-安装butterfly的额外插件"><a href="#2-安装butterfly的额外插件" class="headerlink" title="2.安装butterfly的额外插件"></a>2.安装butterfly的额外插件</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><h3 id="3-编辑根目录-config-yml修改主题"><a href="#3-编辑根目录-config-yml修改主题" class="headerlink" title="3.编辑根目录_config.yml修改主题"></a>3.编辑根目录_config.yml修改主题</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><h4 id="把theme字段值修改为你在-themes下的文件名"><a href="#把theme字段值修改为你在-themes下的文件名" class="headerlink" title="把theme字段值修改为你在/themes下的文件名"></a>把theme字段值修改为你在/themes下的文件名</h4><h3 id="三-修改主题配置"><a href="#三-修改主题配置" class="headerlink" title="三.修改主题配置"></a>三.修改主题配置</h3><h4 id="修改-themes-butterfly-config-yml文件，可参考官方配置https-butterfly-js-org-posts-dc584b87-。"><a href="#修改-themes-butterfly-config-yml文件，可参考官方配置https-butterfly-js-org-posts-dc584b87-。" class="headerlink" title="修改/themes/butterfly/_config.yml文件，可参考官方配置https://butterfly.js.org/posts/dc584b87/。"></a>修改/themes/butterfly/_config.yml文件，可参考官方配置<a href="https://butterfly.js.org/posts/dc584b87/%E3%80%82">https://butterfly.js.org/posts/dc584b87/。</a></h4>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
